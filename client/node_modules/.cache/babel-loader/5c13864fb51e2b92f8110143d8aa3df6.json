{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger'; //import thunk from 'redux-thunk';\n\nimport createSagaMiddleware from 'redux-saga';\nimport { fetchCollectionsStart } from './shop/shop.sagas';\nimport rootReducer from './root-reducer'; //createSagaMiddleware can take some configurations which we didn't need in this project\n\nconst sagaMiddleware = createSagaMiddleware(); //redux thunk got replaced with redux saga to handle asynchronous actions\n//const middlewares = [thunk];\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n} //export const store = createStore(rootReducer, applyMiddleware(...middlewares));\n/////////////////////////////////////////////////////////////\n//use the createStore above if the project is over , it's for redux tools in chrome\n\n\nconst composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({// Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n}) : compose;\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares) // other store enhancers if any\n);\nexport const store = createStore(rootReducer, enhancer); //////////////////////////////////////////////////////////////\n\nsagaMiddleware.run(fetchCollectionsStart);\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Volumes/shared/codes/react_e-com/Main/src/redux/store.js"],"names":["createStore","applyMiddleware","compose","persistStore","logger","createSagaMiddleware","fetchCollectionsStart","rootReducer","sagaMiddleware","middlewares","process","env","NODE_ENV","push","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","enhancer","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAASC,qBAAT,QAAqC,mBAArC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB,C,CAEA;;AACA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C,C,CAEA;AACA;;AACA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA2C;AACzCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACA,C,CAEF;AACA;AACA;;;AACA,MAAMU,gBAAgB,GACtB,OAAOC,MAAP,KAAkB,QAAlB,IACAA,MAAM,CAACC,oCADP,GAEED,MAAM,CAACC,oCAAP,CAA4C,CAC1C;AAD0C,CAA5C,CAFF,GAIKd,OALL;AAOA,MAAMe,QAAQ,GAAGH,gBAAgB,CAChCb,eAAe,CAAC,GAAGQ,WAAJ,CADiB,CAEhC;AAFgC,CAAjC;AAIA,OAAO,MAAMS,KAAK,GAAGlB,WAAW,CAACO,WAAD,EAAcU,QAAd,CAAzB,C,CACP;;AAEAT,cAAc,CAACW,GAAf,CAAoBb,qBAApB;AAEA,OAAO,MAAMc,SAAS,GAAGjB,YAAY,CAACe,KAAD,CAA9B","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\n//import thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { fetchCollectionsStart }from './shop/shop.sagas';\n\nimport rootReducer from './root-reducer';\n\n//createSagaMiddleware can take some configurations which we didn't need in this project\nconst sagaMiddleware = createSagaMiddleware();\n\n//redux thunk got replaced with redux saga to handle asynchronous actions\n//const middlewares = [thunk];\nconst middlewares = [sagaMiddleware];\n\nif(process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n }\n\n//export const store = createStore(rootReducer, applyMiddleware(...middlewares));\n/////////////////////////////////////////////////////////////\n//use the createStore above if the project is over , it's for redux tools in chrome\nconst composeEnhancers =\ntypeof window === 'object' &&\nwindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n}) : compose;\n\nconst enhancer = composeEnhancers(\n applyMiddleware(...middlewares),\n // other store enhancers if any\n);\nexport const store = createStore(rootReducer, enhancer);\n//////////////////////////////////////////////////////////////\n\nsagaMiddleware.run( fetchCollectionsStart );\n\nexport const persistor = persistStore(store);\n\n\n"]},"metadata":{},"sourceType":"module"}