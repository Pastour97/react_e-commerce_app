{"ast":null,"code":"import _regeneratorRuntime from \"/Volumes/shared/codes/react_e-com/Main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Volumes/shared/codes/react_e-com/Main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/Volumes/shared/codes/react_e-com/Main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nconst config = {\n  apiKey: \"AIzaSyAZlPSR6GNoPFNo1krkMiOUQ9jZyMSz4og\",\n  authDomain: \"experimental-react.firebaseapp.com\",\n  databaseURL: \"https://experimental-react.firebaseio.com\",\n  projectId: \"experimental-react\",\n  storageBucket: \"experimental-react.appspot.com\",\n  messagingSenderId: \"233530471284\",\n  appId: \"1:233530471284:web:a1ef48292e0078e5e97221\",\n  measurementId: \"G-F11R53FQXR\"\n};\nexport const createUserProfileDocument = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth, additionalData) {\n    var userRef, collectionRef, snapShot, displayName, email, createdAt;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (userAuth) {\n            _context.next = 2;\n            break;\n          }\n\n          return _context.abrupt(\"return\");\n\n        case 2:\n          userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n          collectionRef = firestore.collection('users');\n          _context.next = 6;\n          return userRef.get();\n\n        case 6:\n          snapShot = _context.sent;\n\n          if (snapShot.exists) {\n            _context.next = 18;\n            break;\n          }\n\n          displayName = userAuth.displayName, email = userAuth.email;\n          createdAt = new Date();\n          _context.prev = 10;\n          _context.next = 13;\n          return userRef.set(_objectSpread({\n            displayName,\n            email,\n            createdAt\n          }, additionalData));\n\n        case 13:\n          _context.next = 18;\n          break;\n\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](10);\n          console.log('error creating user ', _context.t0.message);\n\n        case 18:\n          return _context.abrupt(\"return\", userRef);\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[10, 15]]);\n  }));\n\n  return function createUserProfileDocument(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nfirebase.initializeApp(config);\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Volumes/shared/codes/react_e-com/Main/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","collectionRef","collection","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","initializeApp","addCollectionAndDocuments","collectionKey","objectsToAdd","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAGA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,oCAFD;AAGXC,EAAAA,WAAW,EAAE,2CAHF;AAIXC,EAAAA,SAAS,EAAE,oBAJA;AAKXC,EAAAA,aAAa,EAAE,gCALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWA,OAAO,MAAMC,yBAAyB;AAAA,sEAAG,iBAAOC,QAAP,EAAiBC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAEhCD,QAFgC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAI/BE,UAAAA,OAJ+B,GAIrBC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAJqB;AAK/BC,UAAAA,aAL+B,GAKfH,SAAS,CAACI,UAAV,CAAqB,OAArB,CALe;AAAA;AAAA,iBAOdL,OAAO,CAACM,GAAR,EAPc;;AAAA;AAO/BC,UAAAA,QAP+B;;AAAA,cAShCA,QAAQ,CAACC,MATuB;AAAA;AAAA;AAAA;;AAUzBC,UAAAA,WAVyB,GAUFX,QAVE,CAUzBW,WAVyB,EAUZC,KAVY,GAUFZ,QAVE,CAUZY,KAVY;AAW3BC,UAAAA,SAX2B,GAWf,IAAIC,IAAJ,EAXe;AAAA;AAAA;AAAA,iBAcvBZ,OAAO,CAACa,GAAR;AACFJ,YAAAA,WADE;AAEFC,YAAAA,KAFE;AAGFC,YAAAA;AAHE,aAICZ,cAJD,EAduB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAqB7Be,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC,YAAMC,OAA1C;;AArB6B;AAAA,2CAyB9BhB,OAzB8B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAzBH,yBAAyB;AAAA;AAAA;AAAA,GAA/B;AA6BPV,QAAQ,CAAC8B,aAAT,CAAuB7B,MAAvB;AAEA,OAAO,MAAM8B,yBAAyB,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACtE,QAAMhB,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqBc,aAArB,CAAtB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYX,aAAZ;AACH,CAHM;AAOP,OAAO,MAAMiB,IAAI,GAAGlC,QAAQ,CAACkC,IAAT,EAAb;AACP,OAAO,MAAMpB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AACP,MAAMqB,QAAQ,GAAG,IAAInC,QAAQ,CAACkC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAenC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\n\nconst config = {\n    apiKey: \"AIzaSyAZlPSR6GNoPFNo1krkMiOUQ9jZyMSz4og\",\n    authDomain: \"experimental-react.firebaseapp.com\",\n    databaseURL: \"https://experimental-react.firebaseio.com\",\n    projectId: \"experimental-react\",\n    storageBucket: \"experimental-react.appspot.com\",\n    messagingSenderId: \"233530471284\",\n    appId: \"1:233530471284:web:a1ef48292e0078e5e97221\",\n    measurementId: \"G-F11R53FQXR\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n\n    if (!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    const collectionRef = firestore.collection('users');\n\n    const snapShot = await userRef.get();\n\n    if (!snapShot.exists) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try{\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData,\n            })\n        } catch (error) {\n            console.log('error creating user ', error.message);\n        }\n    }\n\n    return userRef;\n    \n}\n\nfirebase.initializeApp(config);\n\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n    const collectionRef = firestore.collection(collectionKey);\n    console.log(collectionRef);\n}\n\n\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}