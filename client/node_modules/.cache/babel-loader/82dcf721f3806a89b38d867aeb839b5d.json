{"ast":null,"code":"import _regeneratorRuntime from \"/Volumes/shared/codes/react_e-com/Main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Volumes/shared/codes/react_e-com/Main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Volumes/shared/codes/react_e-com/Main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/shared/codes/react_e-com/Main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Volumes/shared/codes/react_e-com/Main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Volumes/shared/codes/react_e-com/Main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Volumes/shared/codes/react_e-com/Main/src/components/sign-in/sign-in.component.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from './../form-input/form-input.component';\nimport CustomButton from './../custom-button/custom-button.component';\nimport { googleSignInStart as _googleSignInStart, emailSignInStart as _emailSignInStart, testing as _testing } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\n\nvar signIn = /*#__PURE__*/function (_Component) {\n  _inherits(signIn, _Component);\n\n  var _super = _createSuper(signIn);\n\n  function signIn(props) {\n    var _this;\n\n    _classCallCheck(this, signIn);\n\n    _this = _super.call(this, props);\n\n    _this.handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var emailSignInStart, _this$state, email, password;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                emailSignInStart = _this.props.emailSignInStart;\n                _this$state = _this.state, email = _this$state.email, password = _this$state.password;\n                emailSignInStart(email, password);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n\n      _this.setState({\n        [name]: value\n      });\n    };\n\n    _this.print = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var testing;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                console.log('hello');\n                testing = _this.props.testing;\n                testing();\n                console.log('fag');\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(signIn, [{\n    key: \"render\",\n    value: function render() {\n      var googleSignInStart = this.props.googleSignInStart;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sign-in\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, \"sign in with your email & password\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.print,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        value: this.state.email,\n        handleChange: this.handleChange,\n        label: \"email\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: this.state.password,\n        handleChange: this.handleChange,\n        label: \"password\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"buttons \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CustomButton, {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      }, \" Sign In \"), /*#__PURE__*/React.createElement(CustomButton, {\n        type: \"button\",\n        onClick: googleSignInStart,\n        isGoogleSignIn: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, \"Sign In With Google\"))));\n    }\n  }]);\n\n  return signIn;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    googleSignInStart: function googleSignInStart() {\n      return dispatch(_googleSignInStart());\n    },\n    emailSignInStart: function emailSignInStart(email, password) {\n      return dispatch(_emailSignInStart(email, password));\n    },\n    testing: function testing() {\n      return dispatch(_testing());\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(signIn);","map":{"version":3,"sources":["/Volumes/shared/codes/react_e-com/Main/src/components/sign-in/sign-in.component.jsx"],"names":["React","Component","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","testing","signIn","props","handleSubmit","event","preventDefault","state","email","password","handleChange","target","value","name","setState","print","console","log","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport FormInput from './../form-input/form-input.component';\nimport CustomButton from './../custom-button/custom-button.component'\n\nimport { googleSignInStart, emailSignInStart, testing } from '../../redux/user/user.actions';\n\nimport './sign-in.styles.scss';\n\nclass signIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: ''\n        }\n\n    };\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        const { emailSignInStart } = this.props;\n        const { email, password } = this.state;\n\n        emailSignInStart(email, password);\n    };\n\n    handleChange = event => {\n        const { value, name } = event.target;\n\n        this.setState({[name]: value });\n    };\n\n    print = async event => {\n        event.preventDefault();\n        console.log('hello');\n        const { testing } =this.props\n        testing();\n\n\n\n        console.log('fag');\n    };\n\n    render() {\n        const { googleSignInStart } = this.props;\n        return (\n            <div className='sign-in'>\n                <h2>I already have an account</h2>\n                <span>sign in with your email & password</span>\n                <form onSubmit={this.print}>\n                    <FormInput\n                        name=\"email\"\n                        type=\"email\"\n                        value={this.state.email}\n                        handleChange={this.handleChange}\n                        label='email'\n                        required\n                    />\n                    <FormInput \n                        name=\"password\"\n                        type=\"password\" \n                        value={this.state.password}\n                        handleChange={this.handleChange}\n                        label='password'\n                        required\n                    />\n                    <div className='buttons '>\n                        <CustomButton type=\"submit\"> Sign In </CustomButton>\n                        <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\n                        Sign In With Google \n                        </CustomButton>\n                    </div>\n                    \n                </form>\n            </div>\n        );\n    };\n}\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) =>\n        dispatch(emailSignInStart(email, password)),\n    testing: () => dispatch(testing())\n});\n\nexport default connect(null, mapDispatchToProps)(signIn);"]},"metadata":{},"sourceType":"module"}