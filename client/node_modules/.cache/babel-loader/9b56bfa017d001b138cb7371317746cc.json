{"ast":null,"code":"import _regeneratorRuntime from \"/Volumes/shared/codes/react_e-com/Main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Volumes/shared/codes/react_e-com/Main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(signInWithGoogle),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(signInWithEmail),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(test),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(onGoogleSignInStart),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(onEmailSignInStart),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(onTest),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(userSagas);\n\nimport { takeLatest, take, put, all, call, takeEvery } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function signInWithGoogle() {\n  var _yield$auth$signInWit, user, userRef, userSnapshot;\n\n  return _regeneratorRuntime.wrap(function signInWithGoogle$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return auth.signInWithPopup(googleProvider);\n\n        case 3:\n          _yield$auth$signInWit = _context.sent;\n          user = _yield$auth$signInWit.user;\n          _context.next = 7;\n          return call(createUserProfileDocument, user);\n\n        case 7:\n          userRef = _context.sent;\n          _context.next = 10;\n          return userRef.get();\n\n        case 10:\n          userSnapshot = _context.sent;\n          _context.next = 13;\n          return put(googleSignInSuccess(_objectSpread({\n            id: userSnapshot.id\n          }, userSnapshot.data())));\n\n        case 13:\n          _context.next = 19;\n          break;\n\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 19;\n          return put(googleSignInFailure(_context.t0));\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 15]]);\n}\nexport function signInWithEmail(_ref) {\n  var _ref$payload, email, password, _yield$auth$signInWit2, user, userRef, userSnapshot;\n\n  return _regeneratorRuntime.wrap(function signInWithEmail$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _ref$payload = _ref.payload, email = _ref$payload.email, password = _ref$payload.password;\n          _context2.prev = 1;\n          console.log(email);\n          console.log(password);\n          _context2.next = 6;\n          return auth.signInWithEmailAndPassword(email, password);\n\n        case 6:\n          _yield$auth$signInWit2 = _context2.sent;\n          user = _yield$auth$signInWit2.user;\n          console.log(user);\n          _context2.next = 11;\n          return call(createUserProfileDocument, user);\n\n        case 11:\n          userRef = _context2.sent;\n          console.log(userRef);\n          _context2.next = 15;\n          return userRef.get();\n\n        case 15:\n          userSnapshot = _context2.sent;\n          console.log(userSnapshot); //yield put(testing);\n          // yield put(emailSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n          //yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n\n          _context2.next = 23;\n          break;\n\n        case 19:\n          _context2.prev = 19;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 23;\n          return put(emailSignInFailure(_context2.t0));\n\n        case 23:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 19]]);\n}\nexport function test() {\n  return _regeneratorRuntime.wrap(function test$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return console.log('everything alright ???');\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n} //watchers\n\nexport function onGoogleSignInStart() {\n  return _regeneratorRuntime.wrap(function onGoogleSignInStart$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\nexport function onEmailSignInStart() {\n  return _regeneratorRuntime.wrap(function onEmailSignInStart$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\nexport function onTest() {\n  return _regeneratorRuntime.wrap(function onTest$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(UserActionTypes.TESTING, test);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\nexport function userSagas() {\n  return _regeneratorRuntime.wrap(function userSagas$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["/Volumes/shared/codes/react_e-com/Main/src/redux/user/user.sagas.js"],"names":["signInWithGoogle","signInWithEmail","test","onGoogleSignInStart","onEmailSignInStart","onTest","userSagas","takeLatest","take","put","all","call","takeEvery","UserActionTypes","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","auth","googleProvider","createUserProfileDocument","signInWithPopup","user","userRef","get","userSnapshot","id","data","payload","email","password","console","log","signInWithEmailAndPassword","GOOGLE_SIGN_IN_START","EMAIL_SIGN_IN_START","TESTING"],"mappings":"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","sourcesContent":["import { takeLatest, take, put, all, call, takeEvery } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\n\nimport { \n    googleSignInSuccess,\n    googleSignInFailure,\n    emailSignInSuccess,\n    emailSignInFailure,\n} from './user.actions'\n\nimport { \n    auth,\n    googleProvider,\n    createUserProfileDocument\n} from '../../firebase/firebase.utils';\n\n\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(\n            googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n        );\n    } catch(error) {\n        yield put(googleSignInFailure(error));\n    }\n}\n\nexport function* signInWithEmail({ payload: { email, password }}) {\n    try {\n        console.log(email);\n        console.log(password);\n        const { user }= yield auth.signInWithEmailAndPassword(email, password);\n        console.log(user);\n        const userRef = yield call(createUserProfileDocument, user);\n        console.log(userRef);\n        const userSnapshot = yield userRef.get();\n        console.log(userSnapshot);\n        //yield put(testing);\n       // yield put(emailSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n        //yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n    } catch(error) {\n        yield put(emailSignInFailure(error));\n    }\n}\n\n\nexport function* test() {\n    yield console.log('everything alright ???');\n}\n\n\n\n//watchers\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onTest() {\n    yield takeEvery(UserActionTypes.TESTING, test);\n}\n\nexport function* userSagas() {\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}"]},"metadata":{},"sourceType":"module"}