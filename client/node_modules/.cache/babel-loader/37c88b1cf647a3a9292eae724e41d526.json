{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Volumes/shared/codes/react_e-com/Main/client/src/components/cart-icon/cart-icon.component.jsx\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { toggleCartHidden as _toggleCartHidden } from '../../redux/cart/cart.actions';\nimport { ReactComponent as ShoppingIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./../../assets/shopping-bag.svg\";\nimport { selectCartItemsCount } from '../../redux/cart/cart.selector';\nimport './cart-icon.styles.scss';\n\nvar CartIcon = function CartIcon(_ref) {\n  var toggleCartHidden = _ref.toggleCartHidden,\n      itemCount = _ref.itemCount;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-icon\",\n    onClick: toggleCartHidden,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ShoppingIcon, {\n    className: \"shopping-icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"item-count\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, itemCount));\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    toggleCartHidden: function toggleCartHidden() {\n      return dispatch(_toggleCartHidden());\n    }\n  };\n};\n/******** THIS SHIT IS CALLED A SELECTOR\nit will call everytime anything changes in our state so it's a perfomance unreliability\nSOLUTION:\n    caching (memoization) & using re-selector library\n\nconst mapStateToProps = ({ cart: { cartItems }}) => {\n    console.log('I am being called');\n    return{\n        itemCount: cartItems.reduce((accumlatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0)\n    }\n}\n*********/\n\n\nvar mapStateToProps = createStructuredSelector({\n  itemCount: selectCartItemsCount\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);","map":{"version":3,"sources":["/Volumes/shared/codes/react_e-com/Main/client/src/components/cart-icon/cart-icon.component.jsx"],"names":["React","connect","createStructuredSelector","toggleCartHidden","selectCartItemsCount","CartIcon","itemCount","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,gBAAgB,IAAhBA,iBAAT,QAAiC,+BAAjC;;AAEA,SAASC,oBAAT,QAAqC,gCAArC;AAEA,OAAO,yBAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGF,gBAAH,QAAGA,gBAAH;AAAA,MAAqBG,SAArB,QAAqBA,SAArB;AAAA,sBACb;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAEH,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BG,SAA9B,CAFJ,CADa;AAAA,CAAjB;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACpCL,IAAAA,gBAAgB,EAAE;AAAA,aAAMK,QAAQ,CAACL,iBAAgB,EAAjB,CAAd;AAAA;AADkB,GAAL;AAAA,CAAnC;AAIA;;;;;;;;;;;;;;AAaA,IAAMM,eAAe,GAAGP,wBAAwB,CAAC;AAC7CI,EAAAA,SAAS,EAAEF;AADkC,CAAD,CAAhD;AAMA,eAAeH,OAAO,CAACQ,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CF,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect'\n\nimport { toggleCartHidden } from '../../redux/cart/cart.actions'\nimport { ReactComponent as ShoppingIcon } from './../../assets/shopping-bag.svg';\nimport { selectCartItemsCount } from '../../redux/cart/cart.selector';\n\nimport './cart-icon.styles.scss';\n\nconst CartIcon = ({ toggleCartHidden, itemCount }) => (\n    <div className='cart-icon' onClick={toggleCartHidden}>\n        <ShoppingIcon className='shopping-icon'/>\n        <span className='item-count'>{itemCount}</span>\n    </div>\n)\n\nconst mapDispatchToProps = dispatch => ({\n    toggleCartHidden: () => dispatch(toggleCartHidden())\n})\n\n/******** THIS SHIT IS CALLED A SELECTOR\nit will call everytime anything changes in our state so it's a perfomance unreliability\nSOLUTION:\n    caching (memoization) & using re-selector library\n\nconst mapStateToProps = ({ cart: { cartItems }}) => {\n    console.log('I am being called');\n    return{\n        itemCount: cartItems.reduce((accumlatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0)\n    }\n}\n*********/\n\nconst mapStateToProps = createStructuredSelector({\n    itemCount: selectCartItemsCount\n})\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);"]},"metadata":{},"sourceType":"module"}